'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.inEU = exports.doNotTrack = exports.openConsentManager = exports.version = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _inEu = require('@segment/in-eu');

var _inEu2 = _interopRequireDefault(_inEu);

var _ = require('.');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var version = exports.version = process.env.VERSION;
exports.openConsentManager = _.openConsentManager;
exports.doNotTrack = _.doNotTrack;
exports.inEU = _inEu2.default;


var dataset = document.currentScript && document.currentScript.dataset;

var props = {};
if (window.consentManagerConfig) {
  // Allow using global variable
  if (typeof window.consentManagerConfig === 'function') {
    props = window.consentManagerConfig({
      React: _react2.default,
      version: version,
      openConsentManager: _.openConsentManager,
      doNotTrack: _.doNotTrack,
      inEU: _inEu2.default
    });
  } else {
    props = window.consentManagerConfig;
  }
} else if (dataset) {
  // Allow using data attributes on the script tag
  props.container = dataset.container;
  props.writeKey = dataset.writekey;
  props.otherWriteKeys = dataset.otherwritekeys;
  props.implyConsentOnInteraction = dataset.implyconsentoninteraction;
  props.cookieDomain = dataset.cookiedomain;
  props.bannerContent = dataset.bannercontent;
  props.bannerTextColor = dataset.bannertextcolor;
  props.bannerBackgroundColor = dataset.bannerbackgroundcolor;
  props.preferencesDialogTitle = dataset.preferencesdialogtitle;
  props.preferencesDialogContent = dataset.preferencesdialogcontent;
  props.cancelDialogTitle = dataset.canceldialogtitle;
  props.cancelDialogContent = dataset.canceldialogcontent;
}

if (!props.container) {
  throw new Error('ConsentManager: container is required');
}

if (!props.writeKey) {
  throw new Error('ConsentManager: writeKey is required');
}

if (!props.bannerContent) {
  throw new Error('ConsentManager: bannerContent is required');
}

if (!props.preferencesDialogContent) {
  throw new Error('ConsentManager: preferencesDialogContent is required');
}

if (!props.cancelDialogContent) {
  throw new Error('ConsentManager: cancelDialogContent is required');
}

if (typeof props.otherWriteKeys === 'string') {
  props.otherWriteKeys = props.otherWriteKeys.split(',');
}

if (typeof props.implyConsentOnInteraction === 'string') {
  props.implyConsentOnInteraction = props.implyConsentOnInteraction === 'true';
}

var container = document.querySelector(props.container);

if (!container) {
  throw new Error('ConsentManager: container not found');
}

_reactDom2.default.render(_react2.default.createElement(_.ConsentManager, props), container);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9zdGFuZGFsb25lLmpzIl0sIm5hbWVzIjpbInZlcnNpb24iLCJwcm9jZXNzIiwiZW52IiwiVkVSU0lPTiIsIm9wZW5Db25zZW50TWFuYWdlciIsImRvTm90VHJhY2siLCJpbkVVIiwiZGF0YXNldCIsImRvY3VtZW50IiwiY3VycmVudFNjcmlwdCIsInByb3BzIiwid2luZG93IiwiY29uc2VudE1hbmFnZXJDb25maWciLCJSZWFjdCIsImNvbnRhaW5lciIsIndyaXRlS2V5Iiwid3JpdGVrZXkiLCJvdGhlcldyaXRlS2V5cyIsIm90aGVyd3JpdGVrZXlzIiwiaW1wbHlDb25zZW50T25JbnRlcmFjdGlvbiIsImltcGx5Y29uc2VudG9uaW50ZXJhY3Rpb24iLCJjb29raWVEb21haW4iLCJjb29raWVkb21haW4iLCJiYW5uZXJDb250ZW50IiwiYmFubmVyY29udGVudCIsImJhbm5lclRleHRDb2xvciIsImJhbm5lcnRleHRjb2xvciIsImJhbm5lckJhY2tncm91bmRDb2xvciIsImJhbm5lcmJhY2tncm91bmRjb2xvciIsInByZWZlcmVuY2VzRGlhbG9nVGl0bGUiLCJwcmVmZXJlbmNlc2RpYWxvZ3RpdGxlIiwicHJlZmVyZW5jZXNEaWFsb2dDb250ZW50IiwicHJlZmVyZW5jZXNkaWFsb2djb250ZW50IiwiY2FuY2VsRGlhbG9nVGl0bGUiLCJjYW5jZWxkaWFsb2d0aXRsZSIsImNhbmNlbERpYWxvZ0NvbnRlbnQiLCJjYW5jZWxkaWFsb2djb250ZW50IiwiRXJyb3IiLCJzcGxpdCIsInF1ZXJ5U2VsZWN0b3IiLCJSZWFjdERPTSIsInJlbmRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBRU8sSUFBTUEsNEJBQVVDLFFBQVFDLEdBQVIsQ0FBWUMsT0FBNUI7UUFDQ0Msa0IsR0FBQUEsb0I7UUFBb0JDLFUsR0FBQUEsWTtRQUFZQyxJLEdBQUFBLGM7OztBQUV4QyxJQUFNQyxVQUFVQyxTQUFTQyxhQUFULElBQTBCRCxTQUFTQyxhQUFULENBQXVCRixPQUFqRTs7QUFFQSxJQUFJRyxRQUFRLEVBQVo7QUFDQSxJQUFJQyxPQUFPQyxvQkFBWCxFQUFpQztBQUMvQjtBQUNBLE1BQUksT0FBT0QsT0FBT0Msb0JBQWQsS0FBdUMsVUFBM0MsRUFBdUQ7QUFDckRGLFlBQVFDLE9BQU9DLG9CQUFQLENBQTRCO0FBQ2xDQyw0QkFEa0M7QUFFbENiLHNCQUZrQztBQUdsQ0ksOENBSGtDO0FBSWxDQyw4QkFKa0M7QUFLbENDO0FBTGtDLEtBQTVCLENBQVI7QUFPRCxHQVJELE1BUU87QUFDTEksWUFBUUMsT0FBT0Msb0JBQWY7QUFDRDtBQUNGLENBYkQsTUFhTyxJQUFJTCxPQUFKLEVBQWE7QUFDbEI7QUFDQUcsUUFBTUksU0FBTixHQUFrQlAsUUFBUU8sU0FBMUI7QUFDQUosUUFBTUssUUFBTixHQUFpQlIsUUFBUVMsUUFBekI7QUFDQU4sUUFBTU8sY0FBTixHQUF1QlYsUUFBUVcsY0FBL0I7QUFDQVIsUUFBTVMseUJBQU4sR0FBa0NaLFFBQVFhLHlCQUExQztBQUNBVixRQUFNVyxZQUFOLEdBQXFCZCxRQUFRZSxZQUE3QjtBQUNBWixRQUFNYSxhQUFOLEdBQXNCaEIsUUFBUWlCLGFBQTlCO0FBQ0FkLFFBQU1lLGVBQU4sR0FBd0JsQixRQUFRbUIsZUFBaEM7QUFDQWhCLFFBQU1pQixxQkFBTixHQUE4QnBCLFFBQVFxQixxQkFBdEM7QUFDQWxCLFFBQU1tQixzQkFBTixHQUErQnRCLFFBQVF1QixzQkFBdkM7QUFDQXBCLFFBQU1xQix3QkFBTixHQUFpQ3hCLFFBQVF5Qix3QkFBekM7QUFDQXRCLFFBQU11QixpQkFBTixHQUEwQjFCLFFBQVEyQixpQkFBbEM7QUFDQXhCLFFBQU15QixtQkFBTixHQUE0QjVCLFFBQVE2QixtQkFBcEM7QUFDRDs7QUFFRCxJQUFJLENBQUMxQixNQUFNSSxTQUFYLEVBQXNCO0FBQ3BCLFFBQU0sSUFBSXVCLEtBQUosQ0FBVSx1Q0FBVixDQUFOO0FBQ0Q7O0FBRUQsSUFBSSxDQUFDM0IsTUFBTUssUUFBWCxFQUFxQjtBQUNuQixRQUFNLElBQUlzQixLQUFKLENBQVUsc0NBQVYsQ0FBTjtBQUNEOztBQUVELElBQUksQ0FBQzNCLE1BQU1hLGFBQVgsRUFBMEI7QUFDeEIsUUFBTSxJQUFJYyxLQUFKLENBQVUsMkNBQVYsQ0FBTjtBQUNEOztBQUVELElBQUksQ0FBQzNCLE1BQU1xQix3QkFBWCxFQUFxQztBQUNuQyxRQUFNLElBQUlNLEtBQUosQ0FBVSxzREFBVixDQUFOO0FBQ0Q7O0FBRUQsSUFBSSxDQUFDM0IsTUFBTXlCLG1CQUFYLEVBQWdDO0FBQzlCLFFBQU0sSUFBSUUsS0FBSixDQUFVLGlEQUFWLENBQU47QUFDRDs7QUFFRCxJQUFJLE9BQU8zQixNQUFNTyxjQUFiLEtBQWdDLFFBQXBDLEVBQThDO0FBQzVDUCxRQUFNTyxjQUFOLEdBQXVCUCxNQUFNTyxjQUFOLENBQXFCcUIsS0FBckIsQ0FBMkIsR0FBM0IsQ0FBdkI7QUFDRDs7QUFFRCxJQUFJLE9BQU81QixNQUFNUyx5QkFBYixLQUEyQyxRQUEvQyxFQUF5RDtBQUN2RFQsUUFBTVMseUJBQU4sR0FBa0NULE1BQU1TLHlCQUFOLEtBQW9DLE1BQXRFO0FBQ0Q7O0FBRUQsSUFBTUwsWUFBWU4sU0FBUytCLGFBQVQsQ0FBdUI3QixNQUFNSSxTQUE3QixDQUFsQjs7QUFFQSxJQUFJLENBQUNBLFNBQUwsRUFBZ0I7QUFDZCxRQUFNLElBQUl1QixLQUFKLENBQVUscUNBQVYsQ0FBTjtBQUNEOztBQUVERyxtQkFBU0MsTUFBVCxDQUFnQiw4QkFBQyxnQkFBRCxFQUFvQi9CLEtBQXBCLENBQWhCLEVBQStDSSxTQUEvQyIsImZpbGUiOiJzdGFuZGFsb25lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSdcbmltcG9ydCBpbkVVIGZyb20gJ0BzZWdtZW50L2luLWV1J1xuaW1wb3J0IHtDb25zZW50TWFuYWdlciwgb3BlbkNvbnNlbnRNYW5hZ2VyLCBkb05vdFRyYWNrfSBmcm9tICcuJ1xuXG5leHBvcnQgY29uc3QgdmVyc2lvbiA9IHByb2Nlc3MuZW52LlZFUlNJT05cbmV4cG9ydCB7b3BlbkNvbnNlbnRNYW5hZ2VyLCBkb05vdFRyYWNrLCBpbkVVfVxuXG5jb25zdCBkYXRhc2V0ID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdCAmJiBkb2N1bWVudC5jdXJyZW50U2NyaXB0LmRhdGFzZXRcblxubGV0IHByb3BzID0ge31cbmlmICh3aW5kb3cuY29uc2VudE1hbmFnZXJDb25maWcpIHtcbiAgLy8gQWxsb3cgdXNpbmcgZ2xvYmFsIHZhcmlhYmxlXG4gIGlmICh0eXBlb2Ygd2luZG93LmNvbnNlbnRNYW5hZ2VyQ29uZmlnID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcHJvcHMgPSB3aW5kb3cuY29uc2VudE1hbmFnZXJDb25maWcoe1xuICAgICAgUmVhY3QsXG4gICAgICB2ZXJzaW9uLFxuICAgICAgb3BlbkNvbnNlbnRNYW5hZ2VyLFxuICAgICAgZG9Ob3RUcmFjayxcbiAgICAgIGluRVVcbiAgICB9KVxuICB9IGVsc2Uge1xuICAgIHByb3BzID0gd2luZG93LmNvbnNlbnRNYW5hZ2VyQ29uZmlnXG4gIH1cbn0gZWxzZSBpZiAoZGF0YXNldCkge1xuICAvLyBBbGxvdyB1c2luZyBkYXRhIGF0dHJpYnV0ZXMgb24gdGhlIHNjcmlwdCB0YWdcbiAgcHJvcHMuY29udGFpbmVyID0gZGF0YXNldC5jb250YWluZXJcbiAgcHJvcHMud3JpdGVLZXkgPSBkYXRhc2V0LndyaXRla2V5XG4gIHByb3BzLm90aGVyV3JpdGVLZXlzID0gZGF0YXNldC5vdGhlcndyaXRla2V5c1xuICBwcm9wcy5pbXBseUNvbnNlbnRPbkludGVyYWN0aW9uID0gZGF0YXNldC5pbXBseWNvbnNlbnRvbmludGVyYWN0aW9uXG4gIHByb3BzLmNvb2tpZURvbWFpbiA9IGRhdGFzZXQuY29va2llZG9tYWluXG4gIHByb3BzLmJhbm5lckNvbnRlbnQgPSBkYXRhc2V0LmJhbm5lcmNvbnRlbnRcbiAgcHJvcHMuYmFubmVyVGV4dENvbG9yID0gZGF0YXNldC5iYW5uZXJ0ZXh0Y29sb3JcbiAgcHJvcHMuYmFubmVyQmFja2dyb3VuZENvbG9yID0gZGF0YXNldC5iYW5uZXJiYWNrZ3JvdW5kY29sb3JcbiAgcHJvcHMucHJlZmVyZW5jZXNEaWFsb2dUaXRsZSA9IGRhdGFzZXQucHJlZmVyZW5jZXNkaWFsb2d0aXRsZVxuICBwcm9wcy5wcmVmZXJlbmNlc0RpYWxvZ0NvbnRlbnQgPSBkYXRhc2V0LnByZWZlcmVuY2VzZGlhbG9nY29udGVudFxuICBwcm9wcy5jYW5jZWxEaWFsb2dUaXRsZSA9IGRhdGFzZXQuY2FuY2VsZGlhbG9ndGl0bGVcbiAgcHJvcHMuY2FuY2VsRGlhbG9nQ29udGVudCA9IGRhdGFzZXQuY2FuY2VsZGlhbG9nY29udGVudFxufVxuXG5pZiAoIXByb3BzLmNvbnRhaW5lcikge1xuICB0aHJvdyBuZXcgRXJyb3IoJ0NvbnNlbnRNYW5hZ2VyOiBjb250YWluZXIgaXMgcmVxdWlyZWQnKVxufVxuXG5pZiAoIXByb3BzLndyaXRlS2V5KSB7XG4gIHRocm93IG5ldyBFcnJvcignQ29uc2VudE1hbmFnZXI6IHdyaXRlS2V5IGlzIHJlcXVpcmVkJylcbn1cblxuaWYgKCFwcm9wcy5iYW5uZXJDb250ZW50KSB7XG4gIHRocm93IG5ldyBFcnJvcignQ29uc2VudE1hbmFnZXI6IGJhbm5lckNvbnRlbnQgaXMgcmVxdWlyZWQnKVxufVxuXG5pZiAoIXByb3BzLnByZWZlcmVuY2VzRGlhbG9nQ29udGVudCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ0NvbnNlbnRNYW5hZ2VyOiBwcmVmZXJlbmNlc0RpYWxvZ0NvbnRlbnQgaXMgcmVxdWlyZWQnKVxufVxuXG5pZiAoIXByb3BzLmNhbmNlbERpYWxvZ0NvbnRlbnQpIHtcbiAgdGhyb3cgbmV3IEVycm9yKCdDb25zZW50TWFuYWdlcjogY2FuY2VsRGlhbG9nQ29udGVudCBpcyByZXF1aXJlZCcpXG59XG5cbmlmICh0eXBlb2YgcHJvcHMub3RoZXJXcml0ZUtleXMgPT09ICdzdHJpbmcnKSB7XG4gIHByb3BzLm90aGVyV3JpdGVLZXlzID0gcHJvcHMub3RoZXJXcml0ZUtleXMuc3BsaXQoJywnKVxufVxuXG5pZiAodHlwZW9mIHByb3BzLmltcGx5Q29uc2VudE9uSW50ZXJhY3Rpb24gPT09ICdzdHJpbmcnKSB7XG4gIHByb3BzLmltcGx5Q29uc2VudE9uSW50ZXJhY3Rpb24gPSBwcm9wcy5pbXBseUNvbnNlbnRPbkludGVyYWN0aW9uID09PSAndHJ1ZSdcbn1cblxuY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9wcy5jb250YWluZXIpXG5cbmlmICghY29udGFpbmVyKSB7XG4gIHRocm93IG5ldyBFcnJvcignQ29uc2VudE1hbmFnZXI6IGNvbnRhaW5lciBub3QgZm91bmQnKVxufVxuXG5SZWFjdERPTS5yZW5kZXIoPENvbnNlbnRNYW5hZ2VyIHsuLi5wcm9wc30gLz4sIGNvbnRhaW5lcilcbiJdfQ==